<?php

/**
 * @file
 * Update hooks.
 */

/**
 * Implements hook_update_last_removed().
 */
function feeds_tamper_update_last_removed() {
  return 7004;
}

/**
 * Update Feeds Tamper from Drupal to Backdrop.
 */
function feeds_tamper_update_1000() {
  if (db_table_exists('feeds_tamper')) {
    $feeds_tampers = db_select('feeds_tamper', 'ft')
    ->fields('ft')
    ->execute()
    ->fetchAllAssoc('id');

    $default_feeds_tamper = update_variable_get('default_feeds_tamper', array());
    $disabled = is_array($default_feeds_tamper) ? $default_feeds_tamper : array();

    foreach($feeds_tampers as $tamper) {
      $importer_config = config('feeds.feeds_importer.' . $tamper->importer);
      $mappings = $importer_config->get('config.processor.config.mappings');
      foreach ($mappings as $key => $mapping) {
        if (!empty($tamper->source) && $mapping['source'] == $tamper->source) {
          if (!isset($mapping['tampers'])) {
            $importer_config->set('config.processor.config.mappings.' . $key . '.tampers', array());
          }
          unset($tamper->importer);
          unset($tamper->source);
          $tamper->settings = (!empty($tamper->settings)) ? unserialize($tamper->settings) : array();
          $tamper->disabled = (!empty($disabled[$tamper->id])) ? 1 : 0;
          $importer_config->set('config.processor.config.mappings.' . $key . '.tampers.' . $tamper->id, $tamper);
          $importer_config->save();
        }
      }
    }
    db_drop_table('feeds_tamper');
  }

  update_variable_del('default_feeds_tamper');
}

/**
 * Put tampers into feeds_importer config files.
 */
function feeds_tamper_update_1001() {
  // Functionality moved into feeds_tamper_update_1000().
  // @see https://github.com/backdrop-contrib/feeds_tamper/issues/19
}
